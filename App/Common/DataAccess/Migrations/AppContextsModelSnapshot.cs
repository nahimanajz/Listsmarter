// <auto-generated />
using System;
using CSharp_intro_1.Common.Repository.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharp_intro_1.Common.DataAccess.Migrations
{
    [DbContext(typeof(AppContexts))]
    partial class AppContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CSharp_intro_1.People.Repositories.Modal.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d22bd9ba-27ca-4271-b9fb-f68b356f06f3"),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("d12bd9ba-27ca-4271-b9fb-f68b356f06f3"),
                            FirstName = "Will",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("CSharp_intro_1.Repositories.Models.Bucket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bucket", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2099c99b-cf1c-418c-ade4-4ef38cce2a38"),
                            Title = "My DB Bucket"
                        },
                        new
                        {
                            Id = new Guid("7e0098e0-cd4b-4c0a-8f3e-be8335eab368"),
                            Title = "My DB second Bucket"
                        });
                });

            modelBuilder.Entity("CSharp_intro_1.Repositories.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BucketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BucketId");

                    b.HasIndex("PersonId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d22bd8ba-27ca-4271-b9fb-f68b356f06f2"),
                            BucketId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "custom software solution for x company",
                            PersonId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Status = 0,
                            Title = "Development work"
                        },
                        new
                        {
                            Id = new Guid("d22bd8ba-27ca-4271-b9fb-f68b356f06f3"),
                            BucketId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "promotion material for new software",
                            PersonId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Status = 1,
                            Title = "Marketing work"
                        });
                });

            modelBuilder.Entity("CSharp_intro_1.Repositories.Models.Task", b =>
                {
                    b.HasOne("CSharp_intro_1.Repositories.Models.Bucket", "Bucket")
                        .WithMany("Tasks")
                        .HasForeignKey("BucketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSharp_intro_1.People.Repositories.Modal.Person", null)
                        .WithMany("Tasks")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bucket");
                });

            modelBuilder.Entity("CSharp_intro_1.People.Repositories.Modal.Person", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CSharp_intro_1.Repositories.Models.Bucket", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
